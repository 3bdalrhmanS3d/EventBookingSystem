@model List<UserViewModel>
@{
    ViewData["Title"] = "User Management";
    var currentPage = (int)ViewData["CurrentPage"];
    var totalPages = (int)ViewData["TotalPages"];
    var search = (string)ViewData["Search"] ?? "";
}

<div class="container-admin fade-in">
    <div class="card-admin">
        <div class="card-header-admin card-header-accent">
            <div class="d-flex justify-content-between align-items-center">
                <h1 class="card-title-admin mb-0">User Management</h1>
               <br />
            </div>
        </div>

        <div class="card-body-admin">
            <!-- Search Form - Updated -->
            <div class="search-form-admin">
                <form method="get" action="@Url.Action("Users", "Admin")" class="d-flex">
                    <div class="input-group-admin">
                        <span class="input-group-text-admin">
                            <i class="fas fa-search"></i>
                        </span>
                        <input type="text" name="search" class="form-control-admin" placeholder="Search by name or email" value="@search">
                        <button type="submit" class="btn-admin btn-primary-admin">
                            Search
                        </button>
                    </div>
                </form>
            </div>

            <!-- Users Table -->
            <div class="table-responsive">
                <table class="table-admin table-admin-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Role</th>
                            <th>Age</th>
                            <th>Status</th>
                            <th>Created</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model)
                        {
                            <tr>
                                <td>@user.Id</td>
                                <td>@user.FullName</td>
                                <td>@user.Email</td>
                                <td>
                                    @switch (user.Role)
                                    {
                                        case UserRoleViewModel.Admin:
                                            <span class="badge-admin badge-admin-primary">Admin</span>
                                            break;
                                        case UserRoleViewModel.User:
                                            <span class="badge-admin badge-admin-info">User</span>
                                            break;
                                        default:
                                            <span class="badge-admin badge-admin-light">@user.Role</span>
                                            break;
                                    }
                                </td>
                                <td>@user.Age</td>
                                <td>
                                    @if (user.IsActive)
                                    {
                                        <span class="badge-admin badge-admin-success">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge-admin badge-admin-danger">Inactive</span>
                                    }
                                </td>
                                <td>@user.CreatedAt.ToString("yyyy-MM-dd")</td>
                                <td>
                                    <div class="btn-group-admin">
                                        <a href="@Url.Action("UserDetails", "Admin", new { id = user.Id })" class="btn-admin btn-admin-sm btn-info-admin">
                                            <i class="fas fa-eye"></i> View
                                        </a>

                                        @if (user.IsActive)
                                        {
                                            <form method="post" action="@Url.Action("DeactivateUser", "Admin", new { id = user.Id })" style="display: inline;">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn-admin btn-admin-sm btn-warning-admin" onclick="return confirm('Are you sure you want to deactivate this user?')">
                                                    <i class="fas fa-ban"></i> Deactivate
                                                </button>
                                            </form>
                                        }
                                        else
                                        {
                                            <form method="post" action="@Url.Action("ActivateUser", "Admin", new { id = user.Id })" style="display: inline;">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn-admin btn-admin-sm btn-success-admin">
                                                    <i class="fas fa-check"></i> Activate
                                                </button>
                                            </form>
                                        }

                                        <form method="post" action="@Url.Action("DeleteUser", "Admin", new { id = user.Id })" style="display: inline;">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn-admin btn-admin-sm btn-danger-admin" onclick="return confirm('Are you sure you want to delete this user? This action cannot be undone.')">
                                                <i class="fas fa-trash"></i> Delete
                                            </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (!Model.Any())
            {
                <div class="alert-admin alert-admin-info">
                    <i class="fas fa-info-circle mr-2"></i>
                    No users found matching your criteria.
                </div>
            }

            <!-- Pagination -->
            @if (totalPages > 1)
            {
                <div class="d-flex justify-content-center mt-4">
                    <ul class="pagination-admin">
                        @if (currentPage > 1)
                        {
                            <li>
                                <a href="@Url.Action("Users", "Admin", new { page = currentPage - 1, search = search })">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                            </li>
                        }

                        @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                        {
                            <li class="@(i == currentPage ? "active" : "")">
                                <a href="@Url.Action("Users", "Admin", new { page = i, search = search })">@i</a>
                            </li>
                        }

                        @if (currentPage < totalPages)
                        {
                            <li>
                                <a href="@Url.Action("Users", "Admin", new { page = currentPage + 1, search = search })">
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            }
        </div>
    </div>
</div>