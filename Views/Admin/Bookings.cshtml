@model List<BookingListViewModel>
@{
    ViewData["Title"] = "Booking Management";
    var currentPage = (int)ViewData["CurrentPage"];
    var totalPages = (int)ViewData["TotalPages"];
    var search = (string)ViewData["Search"] ?? "";
}


<div class="container-admin fade-in">
    <div class="card-admin">
        <div class="card-header-admin card-header-accent">
            <div class="d-flex justify-content-between align-items-center">
                <h1 class="card-title-admin mb-0">Booking Management</h1>
                
            </div>
        </div>

		<br />
        <div class="card-body-admin">
            <!-- Search Form -->
            <form method="get" action="@Url.Action("Bookings", "Admin")" class="mb-4">
                <div class="input-group-admin">
                    <span class="input-group-text-admin">
                        <i class="fas fa-search"></i>
                    </span>
                    <input type="text" name="search" class="form-control-admin" placeholder="Search by name or email" value="@search">
                    <button type="submit" class="btn-admin btn-primary-admin">
                        Search
                    </button>
                </div>
            </form>
            <br />
            <!-- Bookings Table -->
            <div class="table-responsive">
                <table class="table-admin table-admin-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>User</th>
                            <th>Email</th>
                            <th>Event</th>
                            <th>Event Date</th>
                            <th>Tickets</th>
                            <th>Booked On</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var booking in Model)
                        {
                            <tr>
                                <td>@booking.Id</td>
                                <td>@booking.UserName</td>
                                <td>@booking.UserEmail</td>
                                <td>@booking.EventTitle</td>
                                <td>@booking.EventDate.ToString("yyyy-MM-dd HH:mm")</td>
                                <td>@booking.TicketCount</td>
                                <td>@booking.BookedAt.ToString("yyyy-MM-dd HH:mm")</td>
                                <td>
                                    <form method="post" action="@Url.Action("DeleteBooking", "Admin", new { id = booking.Id })">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn-admin btn-admin-sm btn-danger-admin" onclick="return confirm('Are you sure you want to delete this booking? This action cannot be undone.')">
                                            <i class="fas fa-trash"></i> Delete
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (!Model.Any())
            {
                <div class="alert-admin alert-admin-info">
                    <i class="fas fa-info-circle mr-2"></i>
                    No bookings found matching your criteria.
                </div>
            }

            <!-- Pagination -->
            @if (totalPages > 1)
            {
                <div class="d-flex justify-content-center mt-4">
                    <ul class="pagination-admin">
                        @if (currentPage > 1)
                        {
                            <li>
                                <a href="@Url.Action("Bookings", "Admin", new { page = currentPage - 1, search = search })">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                            </li>
                        }

                        @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                        {
                            <li class="@(i == currentPage ? "active" : "")">
                                <a href="@Url.Action("Bookings", "Admin", new { page = i, search = search })">@i</a>
                            </li>
                        }

                        @if (currentPage < totalPages)
                        {
                            <li>
                                <a href="@Url.Action("Bookings", "Admin", new { page = currentPage + 1, search = search })">
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            }
        </div>
    </div>
</div>
