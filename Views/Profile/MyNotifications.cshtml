@model List<EventBookingSystemV1.ViewModels.NotificationViewModel>
@{
    ViewData["Title"] = "My Notifications";
    var unreadCount = (int)ViewData["UnreadCount"];
}

<link rel="stylesheet" href="~/css/profile.css" />

<div class="profile-container">
    <div class="profile-header profile-header-accent">
        <h1 class="profile-title">
            My Notifications
            @if (unreadCount > 0)
            {
                <span class="badge badge-danger">@unreadCount</span>
            }
        </h1>
    </div>

    <div class="profile-body">
        @await Html.PartialAsync("_ProfileNav")

        @if (Model.Count == 0)
        {
            <div class="text-center p-5">
                <i class="bi bi-bell" style="font-size: 3rem; color: var(--text-light);"></i>
                <p class="mt-3">You don't have any notifications yet.</p>
            </div>
        }
        else
        {
            <div class="profile-grid">
                @foreach (var notification in Model)
                {
                    <div class="profile-card notification-card @(notification.IsRead ? "" : "unread")">
                        <div class="profile-card-header">
                            <div>
                                <h3 class="profile-card-title">@notification.Title</h3>
                                <div class="profile-card-subtitle">
                                    <i class="bi bi-clock"></i> @notification.CreatedAt.ToString("MMM d, yyyy - h:mm tt")
                                </div>
                            </div>
                            @if (!notification.IsRead)
                            {
                                <span class="badge badge-danger">New</span>
                            }
                        </div>

                        <div class="profile-card-body">
                            <p>@notification.Message</p>
                        </div>

                        @if (!notification.IsRead)
                        {
                            <div class="profile-card-footer">
                                <form method="post" action="@Url.Action("MarkNotificationRead", new { id = notification.Id })">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn-admin btn-primary-admin btn-admin-sm">
                                        <i class="bi bi-check-circle"></i> Mark as Read
                                    </button>
                                </form>
                            </div>
                        }
                    </div>
                }
            </div>
        }
    </div>
</div>