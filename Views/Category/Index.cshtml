@model List<EventBookingSystemV1.ViewModels.CategoryViewModel>
@{
    ViewData["Title"] = "Event Categories";
    var currentPage = (int)ViewData["CurrentPage"];
    var totalPages = (int)ViewData["TotalPages"];
    var search = (string)ViewData["Search"] ?? "";
}

<link rel="stylesheet" href="~/css/categories.css" />

<div class="category-container">
    <div class="category-header category-header-accent">
        <h1 class="category-title">Event Categories</h1>
        <a href="@Url.Action("CreateCategory")" class="btn-admin btn-primary-admin">
            <i class="bi bi-plus-circle"></i> Add New Category
        </a>
    </div>

    <div class="category-body">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">
                <i class="bi bi-check-circle"></i> @TempData["SuccessMessage"]
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger">
                <i class="bi bi-exclamation-circle"></i> @TempData["ErrorMessage"]
            </div>
        }

        <form method="get" action="@Url.Action("Index")" class="category-search">
            <input type="text" name="search" class="form-control-admin" placeholder="Search categories by name..." value="@search" />
            <button type="submit" class="btn-admin btn-primary-admin">
                <i class="bi bi-search"></i> Search
            </button>
            @if (!string.IsNullOrEmpty(search))
            {
                <a href="@Url.Action("Index")" class="btn-admin btn-secondary-admin">
                    <i class="bi bi-x-circle"></i> Clear
                </a>
            }
        </form>

        @if (Model.Count == 0)
        {
            <div class="text-center p-5">
                <i class="bi bi-tags" style="font-size: 3rem; color: var(--text-light);"></i>
                <p class="mt-3">No categories found. @(string.IsNullOrEmpty(search) ? "Add your first category!" : "Try a different search term.")</p>
                @if (!string.IsNullOrEmpty(search))
                {
                    <a href="@Url.Action("Index")" class="btn-admin btn-primary-admin mt-3">
                        View All Categories
                    </a>
                }
                else
                {
                    <a href="@Url.Action("CreateCategory")" class="btn-admin btn-primary-admin mt-3">
                        <i class="bi bi-plus-circle"></i> Add New Category
                    </a>
                }
            </div>
        }
        else
        {
            <div class="category-grid">
                @foreach (var category in Model)
                {
                    <div class="category-grid-item">
                        <div class="category-grid-item-name">
                            <i class="bi bi-tag"></i> @category.Name
                        </div>
                        <div class="category-grid-item-actions">
                            <a href="@Url.Action("Details", new { id = category.Id })" class="btn-admin btn-info-admin btn-admin-sm">
                                <i class="bi bi-eye"></i>
                            </a>
                            <a href="@Url.Action("EditCategory", new { id = category.Id })" class="btn-admin btn-primary-admin btn-admin-sm">
                                <i class="bi bi-pencil"></i>
                            </a>
                            <button type="button" class="btn-admin btn-danger-admin btn-admin-sm" onclick="showDeleteModal(@category.Id, '@category.Name')">
                                <i class="bi bi-trash"></i>
                            </button>
                        </div>
                    </div>
                }
            </div>

            @if (totalPages > 1)
            {
                <div class="category-pagination">
                    @if (currentPage > 1)
                    {
                        <a href="@Url.Action("Index", new { page = currentPage - 1, search })" class="prev">
                            <i class="bi bi-chevron-left"></i>
                        </a>
                    }
                    else
                    {
                        <span class="disabled">
                            <i class="bi bi-chevron-left"></i>
                        </span>
                    }

                    @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                    {
                        if (i == currentPage)
                        {
                            <span class="active">@i</span>
                        }
                        else
                        {
                            <a href="@Url.Action("Index", new { page = i, search })">@i</a>
                        }
                    }

                    @if (currentPage < totalPages)
                    {
                        <a href="@Url.Action("Index", new { page = currentPage + 1, search })" class="next">
                            <i class="bi bi-chevron-right"></i>
                        </a>
                    }
                    else
                    {
                        <span class="disabled">
                            <i class="bi bi-chevron-right"></i>
                        </span>
                    }
                </div>
            }
        }
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div id="deleteModal" class="delete-modal">
    <div class="delete-modal-content">
        <div class="delete-modal-header">
            <h2 class="delete-modal-title">Confirm Deletion</h2>
        </div>
        <div class="delete-modal-body">
            <p>Are you sure you want to delete the category "<span id="categoryName"></span>"?</p>
            <p class="text-danger">This action cannot be undone. Events in this category will be affected.</p>
        </div>
        <div class="delete-modal-footer">
            <button type="button" class="btn-admin" onclick="hideDeleteModal()">Cancel</button>
            <form id="deleteForm" method="post" action="">
                @Html.AntiForgeryToken()
                <button type="submit" class="btn-admin btn-danger-admin">Delete</button>
            </form>
        </div>
    </div>
</div>

<script>
    function showDeleteModal(id, name) {
        document.getElementById('categoryName').textContent = name;
        document.getElementById('deleteForm').action = '@Url.Action("DeleteCategory", "Category")/' + id;
        document.getElementById('deleteModal').classList.add('show');
    }

    function hideDeleteModal() {
        document.getElementById('deleteModal').classList.remove('show');
    }

    // Close modal when clicking outside
    window.addEventListener('click', function(event) {
        var modal = document.getElementById('deleteModal');
        if (event.target === modal) {
            hideDeleteModal();
        }
    });
</script>